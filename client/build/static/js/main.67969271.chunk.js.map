{"version":3,"sources":["constants/actions.js","reducers/index.js","reducers/posts.js","api/index.js","actions/posts.js","Navbar/Navigation.js","Form/VHSForm.js","Posts/Post/Post.js","Posts/VHSPosts.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","combineReducers","posts","action","type","filter","post","_id","payload","map","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","createPost","dispatch","a","newPost","data","console","log","api","Navigation","Navbar","collapseOnSelect","bg","variant","fixed","expand","style","height","Brand","href","className","Toggle","Collapse","Nav","Link","VHSForm","currentId","setCurrentId","useState","title","movieYear","vhsYear","vhsCompany","genre","vhsId","clamShell","values","setValues","errors","setErrors","validated","setValidated","useSelector","state","find","movie","useDispatch","useEffect","handleChange","e","target","name","value","handleSubmit","preventDefault","errorMap","Object","keys","length","clear","src","alt","textAlign","Form","onSubmit","border","padding","fontSize","backgroundColor","Group","Label","Control","size","placeholder","isInvalid","onChange","min","max","as","Button","onClick","Post","Container","DropdownButton","Dropdown","Item","Posts","CircularProgress","App","get","message","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"mMAAaA,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAW,YCATC,cAAgB,CAACC,MCAjB,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIC,EAAW,uCACnC,OAAOA,EAAOC,MACV,KAAKL,EAAQ,OAAOG,EAAMG,QAAO,SAACC,GAAD,OAAUA,EAAKC,MAAQJ,EAAOK,WAC/D,KAAKV,EAAQ,OAAOI,EAAMO,KAAI,SAACH,GAAD,OAAUA,EAAKC,MAAQJ,EAAOK,QAAQD,IAAMJ,EAAOK,QAAUF,KAC3F,KAAKN,EAAW,OAAOG,EAAOK,QAC9B,KAAKX,EAAQ,MAAM,GAAN,mBAAWK,GAAX,CAAkBC,EAAOK,UACtC,QAAS,OAAON,M,mECPlBQ,EAAM,sCAKCC,EAAa,SAACC,EAAIC,GAAL,OAAqBC,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMC,IAC9DG,EAAa,SAACJ,GAAD,OAAQE,IAAMG,OAAN,UAAgBP,EAAhB,YAAuBE,KCS1CM,EAAa,SAACZ,GAAD,8CAAW,WAAOa,GAAP,iBAAAC,EAAA,+EDXZC,ECamBf,EDbPQ,IAAMR,KAAKI,EAAKW,GCWhB,gBAEtBC,EAFsB,EAEtBA,KAEPH,EAAS,CAACf,KAAMP,EAAQW,QAASc,IAJJ,gDAO7BC,QAAQC,IAAR,MAP6B,kCDXb,IAACH,ICWY,oBAAX,uDAWfV,EAAa,SAACC,EAAIN,GAAL,8CAAe,WAAOa,GAAP,iBAAAC,EAAA,+EAEZK,EAAeb,EAAIN,GAFP,gBAE1BgB,EAF0B,EAE1BA,KAEPH,EAAS,CAACf,KAAMN,EAAQU,QAASc,IAJA,gDAOjCC,QAAQC,IAAR,MAPiC,yDAAf,uD,yBCNXE,EAlBI,WAEf,OACI,8BACR,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,MAAMC,OAAO,KAAKC,MAAO,CAACC,OAAQ,UAA1F,UACA,cAACP,EAAA,EAAOQ,MAAR,CAAcC,KAAK,QAAQC,UAAU,+BACrC,cAACV,EAAA,EAAOW,OAAR,CAAe,gBAAc,mBAAmBD,UAAU,uBAC1D,cAACV,EAAA,EAAOY,SAAR,CAAiB3B,GAAG,mBAApB,SACA,eAAC4B,EAAA,EAAD,CAAKH,UAAU,UAAf,UACA,cAACG,EAAA,EAAIC,KAAL,CAAUJ,UAAU,UAAUD,KAAK,QAAnC,SAA2C,wCAC3C,cAACI,EAAA,EAAIC,KAAL,CAAUJ,UAAU,UAAUD,KAAK,WAAnC,SAA8C,sD,+BCL/B,SAASM,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aAE5C,EAA4BC,mBAAS,CACnCC,MAAO,GACPC,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,MAAO,GACPC,MAAO,GACPC,UAAW,KAPb,mBAAOC,EAAP,KAAeC,EAAf,KASA,EAA4BT,mBAAS,IAArC,mBAAOU,EAAP,KAAeC,EAAf,KACA,EAAkCX,oBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KAEMpD,EAAOqD,aAAY,SAACC,GAAD,OAAWjB,EAAYiB,EAAM1D,MAAM2D,MAAK,SAACC,GAAD,OAAWA,EAAMvD,MAAQoC,KAAa,QAEjGxB,EAAW4C,cAGjBC,qBAAU,WACL1D,GAAMgD,EAAUhD,KAClB,CAACA,IAGJ,IAAM2D,EAAe,SAACC,GACpB,MAAsBA,EAAEC,OAAjBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbf,EAAU,2BACLD,GADI,kBAENe,EAAOC,MAKNC,EAAY,uCAAG,WAAOJ,GAAP,eAAA9C,EAAA,sDACnB8C,EAAEK,iBACIC,EAAW,GACbnB,EAAOP,QACT0B,EAAS1B,MAAQ,aAEhBO,EAAON,UAAY,MAAQM,EAAON,UAAY,QAC/CyB,EAASzB,UAAY,uBAGpBM,EAAOL,QAAU,MAAQK,EAAON,UAAY,QAC7CyB,EAASxB,QAAU,sBAEjBK,EAAOJ,aACTuB,EAASvB,WAAa,YAEpBI,EAAOH,QACTsB,EAAStB,MAAO,YAEdG,EAAOF,QACTqB,EAASrB,MAAQ,YAEfE,EAAOD,YACToB,EAASpB,UAAY,YAEc,IAAjCqB,OAAOC,KAAKF,GAAUG,QACxBnB,EAAUgB,GACVd,GAAa,IAEO,IAAdf,GACNe,GAAa,GACbvC,EAASD,EAAWmC,IACpBuB,MAGAlB,GAAa,GACbvC,EAASR,EAAWgC,EAAWU,IAC/BuB,KArCiB,4CAAH,sDAyCZA,EAAQ,WACZhC,EAAa,GACbU,EAAU,CAAER,MAAO,GAAIC,UAAW,GAAIC,QAAS,GAAIC,WAAY,GAAIC,MAAO,GAAIC,MAAO,GAAIC,UAAW,MAGpG,OACE,sBAAKf,UAAU,YAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,qBAAKwC,IAAI,kCAAkCC,IAAI,WAAWlE,GAAG,aAC7D,qBAAIqB,MAAO,CAAC8C,UAAW,UAAvB,UAAmCpC,EAAY,OAAS,SAAxD,oBACA,qBAAKkC,IAAI,kCAAkCC,IAAI,WAAWlE,GAAG,gBAGhE,eAACoE,EAAA,EAAD,CAAMvB,UAAWA,EAAWwB,SAAUX,EAAcrC,MAAO,CAACiD,OAAQ,kBAAmBC,QAAS,OAAQC,SAAU,SAAUC,gBAAiB,YAAanD,OAAQ,QAAlK,UACC,eAAC8C,EAAA,EAAKM,MAAN,WACI,cAACN,EAAA,EAAKO,MAAN,2BACA,cAACP,EAAA,EAAKQ,QAAN,CAAcnD,UAAU,aACVoD,KAAK,KACLrF,KAAK,OACLgE,KAAK,QACLsB,YAAY,yBACZrB,MAAOhB,EAAOP,MACd6C,UAAWpC,EAAOT,MAClB8C,SAAU3B,OAE1B,uBACA,eAACe,EAAA,EAAKM,MAAN,WACE,cAACN,EAAA,EAAKO,MAAN,2CACA,cAACP,EAAA,EAAKQ,QAAN,CAAcnD,UAAU,aACVoD,KAAK,KACLrF,KAAK,SACLgE,KAAK,YACLyB,IAAI,OACJC,IAAI,OACJJ,YAAY,aACZrB,MAAOhB,EAAON,UACd4C,UAAWpC,EAAOR,UAClB6C,SAAU3B,OAE1B,uBACA,eAACe,EAAA,EAAKM,MAAN,WACE,cAACN,EAAA,EAAKO,MAAN,8CACA,cAACP,EAAA,EAAKQ,QAAN,CAAcnD,UAAU,aACVoD,KAAK,KACLrF,KAAK,SACLgE,KAAK,UACLyB,IAAI,OACJC,IAAI,OACJJ,YAAY,aACZrB,MAAOhB,EAAOL,QACd2C,UAAWpC,EAAOP,QAClB4C,SAAU3B,OAG1B,uBACA,eAACe,EAAA,EAAKM,MAAN,WACE,cAACN,EAAA,EAAKO,MAAN,6CACA,eAACP,EAAA,EAAKQ,QAAN,CAAcO,GAAG,SACHN,KAAK,KACLpD,UAAU,aACV+B,KAAK,aACLhE,KAAK,SACLiE,MAAOhB,EAAOJ,WACd0C,UAAWpC,EAAON,WAClB2C,SAAU3B,EAPxB,UASR,kEACA,wBAAQI,MAAM,oBAAd,8BACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,mBACA,wBAAQA,MAAM,6BAAd,wCACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,uBAAd,kCACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,uBAAd,kCACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,wBAAd,mCACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,QAAd,oCAGM,uBACA,eAACW,EAAA,EAAKM,MAAN,WACA,cAACN,EAAA,EAAKO,MAAN,kCACA,eAACP,EAAA,EAAKQ,QAAN,CAAcO,GAAG,SACH1D,UAAU,aACVoD,KAAK,KACLrB,KAAK,QACLhE,KAAK,SACLiE,MAAOhB,EAAOH,MACdyC,UAAWpC,EAAOL,MAClB0C,SAAU3B,EAPxB,UASA,kDACA,wBAAQI,MAAM,SAAd,8BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,6BACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,2BAGA,uBACA,eAACW,EAAA,EAAKM,MAAN,WACE,cAACN,EAAA,EAAKO,MAAN,kCACA,cAACP,EAAA,EAAKQ,QAAN,CAAcnD,UAAU,aACVoD,KAAK,KACLrF,KAAK,SACLgE,KAAK,QACLsB,YAAY,uBACZrB,MAAOhB,EAAOF,MACdwC,UAAWpC,EAAOJ,MAClByC,SAAU3B,OAE1B,uBACA,eAACe,EAAA,EAAKM,MAAN,WACE,cAACN,EAAA,EAAKO,MAAN,8BACA,eAACP,EAAA,EAAKQ,QAAN,CAAcO,GAAG,SACHN,KAAK,KACLpD,UAAU,aACVjC,KAAK,SACLgE,KAAK,YACLC,MAAOhB,EAAOD,UACduC,UAAWpC,EAAOH,UAClBwC,SAAU3B,EAPxB,UASA,sDACA,wBAAQI,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,uBAGJ,uBACA,sBAAKhC,UAAU,gCAAf,UACE,cAAC2D,EAAA,EAAD,CAAQlE,QAAQ,UAAU1B,KAAK,SAASqF,KAAK,KAA7C,oBAGA,cAACO,EAAA,EAAD,CAAQlE,QAAQ,OAAO1B,KAAK,QAAQqF,KAAK,KAAKQ,QAASrB,EAAvD,4B,6BC/NOsB,EAxCF,SAAC,GAA0B,IAAzB5F,EAAwB,EAAxBA,KAAMsC,EAAkB,EAAlBA,aACXzB,EAAW4C,cAYjB,OACA,cAACoC,EAAA,EAAD,UACI,qBAAK9D,UAAY,YAAjB,SACA,sBAAKA,UAAU,MAAf,UACA,qBAAKA,UAAU,+CAAf,SACA,8BAAI/B,EAAKwC,MAAT,IAAiBxC,EAAKyC,UAAtB,SAEA,qBAAKV,UAAU,qCAAf,SACF,eAAC+D,EAAA,EAAD,CAAgBX,KAAK,KAAK3D,QAAQ,oBAAoBlB,GAAG,wBAAwBkC,MAAM,GAAGT,UAAU,cAApG,UACE,eAACgE,EAAA,EAASC,KAAV,CAAeb,KAAK,KAApB,gCAA8CnF,EAAKyC,aACnD,eAACsD,EAAA,EAASC,KAAV,CAAeb,KAAK,KAApB,yBAAuCnF,EAAK0C,WAC5C,eAACqD,EAAA,EAASC,KAAV,CAAeb,KAAK,KAApB,yBAAuCnF,EAAK2C,cAC5C,eAACoD,EAAA,EAASC,KAAV,CAAeb,KAAK,KAApB,mBAAiCnF,EAAK4C,SACtC,eAACmD,EAAA,EAASC,KAAV,CAAeb,KAAK,KAApB,yBAAuCnF,EAAK6C,SAC5C,eAACkD,EAAA,EAASC,KAAV,CAAeb,KAAK,KAApB,6BAA2CnF,EAAK8C,aAChD,cAACiD,EAAA,EAASC,KAAV,CAAeb,KAAK,KAAKrD,KAAK,QAAQ6D,QAxBxB,WACdrD,EAAatC,EAAKC,MAuBlB,kBACA,cAAC8F,EAAA,EAASC,KAAV,CAAeb,KAAK,KAAKrD,KAAK,QAAQ6D,QArBtB,WHsBE,IAACrF,EGrBnBO,GHqBmBP,EGrBCN,EAAKC,IHqBP,uCAAQ,WAAOY,GAAP,SAAAC,EAAA,+EAEpBK,EAAeb,GAFK,OAI1BO,EAAS,CAACf,KAAML,EAAQS,QAASI,IAJP,+CAO1BW,QAAQC,IAAR,MAP0B,wDAAR,yDGDlB,iCCTO+E,EArBD,SAAC,GAAoB,IAAnB3D,EAAkB,EAAlBA,aACN1C,EAAQyD,aAAY,SAACC,GAAD,OAAWA,EAAM1D,SAG3C,OACKA,EAAMyE,OACH,gCACA,oBAAI1C,MAAO,CAAC8C,UAAW,UAAvB,qBACJ,cAACoB,EAAA,EAAD,CAAW9D,UAAU,WAArB,SACKnC,EAAMO,KAAI,SAACH,GAAD,OACP,gCACI,cAAC,EAAD,CAAMA,KAAMA,EAAMsC,aAAcA,IAChC,yBAFMtC,EAAKC,aALP,cAACiG,EAAA,EAAD,KCmBTC,G,OAtBH,WAEV,MAAkC5D,mBAAS,GAA3C,mBAAOF,EAAP,KAAkBC,EAAlB,KACMzB,EAAW4C,cAMnB,OAJEC,qBAAU,WACR7C,ELVoB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,+EDDEN,IAAM4F,IAAIhG,GCCZ,gBAEjBY,EAFiB,EAEjBA,KAEPH,EAAS,CAACf,KAAMJ,EAAWQ,QAASc,IAJZ,gDAOtBC,QAAQC,IAAI,KAAMmF,SAPI,yDAAN,yDKWnB,CAAChE,EAAWxB,IAGhB,gCACE,eAACgF,EAAA,EAAD,CAAWvF,GAAG,OAAOyB,UAAU,iBAA/B,UACA,cAAC,EAAD,IACA,cAACK,EAAD,CAASC,UAAWA,EAAWC,aAAcA,OAE7C,cAACuD,EAAA,EAAD,CAAWvF,GAAG,UAAUyB,UAAU,iBAAlC,SACA,cAAC,EAAD,CAAOO,aAAcA,WCjBlBgE,EAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,OAG5DC,IAASC,OACL,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACA,cAAC,EAAD,MAGFQ,SAASC,eAAe,W","file":"static/js/main.67969271.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL= 'FETCH_ALL';","import { combineReducers } from 'redux';\nimport posts from './posts';\n\nexport default combineReducers({posts});","import {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actions';\n\n// switch cases for all CRUD API calls:\nexport default (posts = [], action) => {\n    switch(action.type) {\n        case DELETE: return posts.filter((post) => post._id !== action.payload);\n        case UPDATE: return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case FETCH_ALL: return action.payload;\n        case CREATE: return [...posts, action.payload];\n        default: return posts;\n    }\n}","import axios from 'axios';\n\nconst url = 'https://vhs-api.herokuapp.com/posts';\n\n// API calls to database \nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);","import * as api from '../api';\nimport {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actions';\n\n//Action Creators\n\n//to fetch all posts:\nexport const getPosts = () => async (dispatch) => {\n    try{\n      const {data} = await api.fetchPosts();  \n\n      dispatch({type: FETCH_ALL, payload: data})\n    }\n    catch(error){\n        console.log(error.message)\n    }\n  }\n  // to create a new post:\n  export const createPost = (post)  => async (dispatch) => {\n      try{\n          const {data} = await api.createPost(post);\n\n          dispatch({type: CREATE, payload: data})\n      }\n      catch(error){\n          console.log(error)\n      }\n}\n// to update a post:\nexport const updatePost = (id, post)  => async (dispatch) => {\n    try{\n        const {data} = await api.updatePost(id, post);\n\n        dispatch({type: UPDATE, payload: data})\n    }\n    catch(error){\n        console.log(error)\n    }\n}\n// to delete a post\nexport const deletePost = (id) => async (dispatch) => {\n    try{\n        await api.deletePost(id);\n\n        dispatch({type: DELETE, payload: id});\n    }\n    catch(error){\n        console.log(error)\n    }\n}","import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\n\n// Responsive fixed navbar to switch from Form to list of entries:\nconst Navigation = () => {\n\n    return(\n        <div>\n<Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"sm\" style={{height: \"3.2rem\"}}>\n<Navbar.Brand href=\"#form\" className=\"order-sm-0 mx-auto order-1\"></Navbar.Brand>\n<Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"order-sm-1 order-0\"/>\n<Navbar.Collapse id=\"basic-navbar-nav\">\n<Nav className=\"mr-auto\">\n<Nav.Link className=\"bg-dark\" href=\"#form\"><h6>Form</h6></Nav.Link>\n<Nav.Link className=\"bg-dark\" href=\"#entries\"><h6>Entries</h6></Nav.Link>\n</Nav>\n</Navbar.Collapse>\n</Navbar>\n    </div>\n    )\n}\n\nexport default Navigation","import React, {useState, useEffect} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {createPost, updatePost} from '../actions/posts';\n\n//Input from form submission to be posted to Database:\n\nexport default function VHSForm({currentId, setCurrentId}) {\n// json keys and values to be collected in form:\nconst [values, setValues] = useState({\n  title: \"\",\n  movieYear: \"\",\n  vhsYear: \"\",\n  vhsCompany: \"\",\n  genre: \"\",\n  vhsId: \"\",\n  clamShell: \"\"\n});\nconst [errors, setErrors] = useState({});\nconst [validated, setValidated] = useState(false);\n\nconst post = useSelector((state) => currentId ? state.posts.find((movie) => movie._id === currentId) : null);\n\nconst dispatch = useDispatch();\n\n//For updating entries:\nuseEffect(() => {\n  if(post) setValues(post);\n}, [post])\n\n//To set form data in state:\nconst handleChange = (e) => {\n  const {name, value} = e.target;\n  setValues({\n    ...values,\n    [name]: value\n  })\n}\n// Submit includes validation logic to ensure usable data is collected:\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  const errorMap = {};\n  if(!values.title){\n    errorMap.title = \"Required\";\n  }\n  if(values.movieYear < 1895 || values.movieYear > 2006){\n    errorMap.movieYear = \"Enter a valid Year\";\n  }\n  // (VHS tapes were produced from 1976 to 2006)\n  if(values.vhsYear < 1976 || values.movieYear > 2006){\n    errorMap.vhsYear = \"Enter a valid year\";\n  }\n  if(!values.vhsCompany){\n    errorMap.vhsCompany = \"Required\";\n  }\n  if(!values.genre){\n    errorMap.genre= \"Required\";\n  }\n  if(!values.vhsId){\n    errorMap.vhsId = \"Required\";\n  }\n  if(!values.clamShell){\n    errorMap.clamShell = \"Required\";\n  }\n  if (Object.keys(errorMap).length !== 0) {\n    setErrors(errorMap);\n    setValidated(false);\n  }\n  else if(currentId === 0) {\n    setValidated(true);\n    dispatch(createPost(values));\n    clear();\n  }\n  else {\n    setValidated(true);\n    dispatch(updatePost(currentId, values));\n    clear();\n  }\n}\n// To clear form data fields:\nconst clear = () => {\n  setCurrentId(0);\n  setValues({ title: '', movieYear: '', vhsYear: '', vhsCompany: '', genre: '', vhsId: '', clamShell: '' });\n};\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center\">\n        <img src=\"https://i.imgur.com/cXjZtki.jpg\" alt=\"vhs-logo\" id=\"vhs-logo\"></img>\n        <h4 style={{textAlign: 'center'}}>{currentId ? 'Edit' : 'Submit'} a VHS release</h4>\n        <img src=\"https://i.imgur.com/cXjZtki.jpg\" alt=\"vhs-logo\" id=\"vhs-logo\"></img>\n        </div>\n      \n     <Form validated={validated} onSubmit={handleSubmit} style={{border: \"1px solid black\", padding: \"1rem\", fontSize: \"0.9rem\", backgroundColor: \"lightgray\", height: \"79vh\"}}>\n      <Form.Group>\n          <Form.Label>Movie Title:</Form.Label>\n          <Form.Control className=\"form-label\"\n                        size=\"sm\"\n                        type=\"text\"\n                        name=\"title\" \n                        placeholder=\"Enter full movie title\"\n                        value={values.title}\n                        isInvalid={errors.title}\n                        onChange={handleChange} />\n        </Form.Group>\n        <br/>\n        <Form.Group>\n          <Form.Label>Enter year of movie release:</Form.Label>\n          <Form.Control className=\"form-label\"\n                        size=\"sm\"\n                        type=\"number\"\n                        name=\"movieYear\"\n                        min=\"1900\"\n                        max=\"2006\" \n                        placeholder=\"Enter year\"\n                        value={values.movieYear}\n                        isInvalid={errors.movieYear}\n                        onChange={handleChange} />\n        </Form.Group>\n        <br/>\n        <Form.Group>\n          <Form.Label>Enter year of VHS tape release:</Form.Label>\n          <Form.Control className=\"form-label\"\n                        size=\"sm\"\n                        type=\"number\" \n                        name=\"vhsYear\"\n                        min=\"1976\"\n                        max=\"2006\"\n                        placeholder=\"Enter year\" \n                        value={values.vhsYear}\n                        isInvalid={errors.vhsYear}\n                        onChange={handleChange}\n                        />\n        </Form.Group>\n        <br/>\n        <Form.Group>\n          <Form.Label>Select VHS production company:</Form.Label>\n          <Form.Control as=\"select\"\n                        size=\"sm\"\n                        className=\"form-label\"\n                        name=\"vhsCompany\"\n                        type=\"string\"\n                        value={values.vhsCompany}\n                        isInvalid={errors.vhsCompany}\n                        onChange={handleChange}\n                        >\n  <option>Choose VHS Prodution Company</option>\n  <option value=\"20th Centrury Fox\">20th Century Fox</option>\n  <option value=\"Admit One\">Admit One</option>\n  <option value=\"Anchor Bay\">Anchor Bay</option>\n  <option value=\"Artisan\">Artisan</option>\n  <option value=\"Avid\">Avid</option>\n  <option value=\"Cannon\">Cannon</option>\n  <option value=\"Carolco\">Carolco</option>\n  <option value=\"CBS FOX\">CBS FOX</option>\n  <option value=\"Columbia\">Columbia</option>\n  <option value=\"Columbia/TriStar\">Columbia/TriStar</option>\n  <option value=\"Dimension\">Dimension</option>\n  <option value=\"Dreamworks\">Dreamworks</option>\n  <option value=\"Elektra\">Elektra</option>\n  <option value=\"Embassy\">Embassy</option>\n  <option value=\"f.h.e.\">f.h.e</option>\n  <option value=\"Feature Films For Families\">Feature Films For Families</option>\n  <option value=\"Fox Lorber\">Fox Lorber</option>\n  <option value=\"Fox Video\">Fox Video</option>\n  <option value=\"Goodtimes\">Goodtimes</option>\n  <option value=\"HBO Video\">HBO Video</option>\n  <option value=\"Hemdale\">Hemdale</option>\n  <option value=\"Hollywood Pictures\">Hollywood Pictures</option>\n  <option value=\"Key Video\">Key Video</option>\n  <option value=\"KLT-TV\">KLV-TV</option>\n  <option value=\"Lightning Video\">Lightning Video</option>\n  <option value=\"Lion's Gate\">Lion's Gate</option>\n  <option value=\"Live Entertainment\">Live Entertainment</option>\n  <option value=\"Live Home Video\">Live Home Video</option>\n  <option value=\"Magnetic Video\">Magnetic Video</option>\n  <option value=\"MCA Home Video\">MCA Home Video</option>\n  <option value=\"MCA/Universal\">MCA/Universal</option>\n  <option value=\"Media\">Media</option>\n  <option value=\"MGM\">MGM</option>\n  <option value=\"Miramax\">Miramax</option>\n  <option value=\"MTV\">MTV</option>\n  <option value=\"Nelson Entertainment\">Nelson Entertainment</option>\n  <option value=\"Nettwerk\">Nettwerk</option>\n  <option value=\"New Line\">New Line</option>\n  <option value=\"October Films\">October Films</option>\n  <option value=\"Orion\">Orion</option>\n  <option value=\"Paramount\">Paramount</option>\n  <option value=\"PBS Home Video\">PBS Home Video</option>\n  <option value=\"Polygram Video\">Polygram Video</option>\n  <option value=\"Prism Pictures\">Prism Pictures</option>\n  <option value=\"RCA/Columbia\">RCA/Columbia</option>\n  <option value=\"Republic Pictures\">Republic Pictures</option>\n  <option value=\"Rhino\">Rhino</option>\n  <option value=\"Sherwood Productions\">Sherwood Productions</option>\n  <option value=\"Starmaker\">Starmaker</option>\n  <option value=\"Touchstone\">Touchstone</option>\n  <option value=\"Triboro Entertainment\">Triboro Entertainment</option>\n  <option value=\"Trimark Home Video\">Trimark Home Video</option>\n  <option value=\"Troma\">Troma</option>\n  <option value=\"Universal\">Universal</option>\n  <option value=\"Vestron\">Vestron</option>\n  <option value=\"Video Treasures\">Video Treasures</option>\n  <option value=\"Walt Disney\">Walt Disney</option>\n  <option value=\"Warner Home Video\">Warner Home Video</option>\n  <option value=\"WorldVision\">WorldVision</option>\n  <option value=\"Other\">Other/Not Listed</option>\n          </Form.Control>\n        </Form.Group>\n        <br/>\n        <Form.Group>\n        <Form.Label>Select Movie Genre:</Form.Label>\n        <Form.Control as=\"select\"\n                      className=\"form-label\"\n                      size=\"sm\"\n                      name=\"genre\"\n                      type=\"string\"\n                      value={values.genre}\n                      isInvalid={errors.genre}\n                      onChange={handleChange}\n                      >\n        <option>Choose Genre</option>\n        <option value=\"action\">Action/Adventure</option> \n        <option value=\"comedy\">Comedy</option>\n        <option value=\"documentary\">Documentary</option>\n        <option value=\"drama\">Drama</option>\n        <option value=\"family\">Family</option>\n        <option value=\"fantasy\">Fantasy</option>\n        <option value=\"horror\">Horror</option>\n        <option value=\"musical\">Musical</option>\n        <option value=\"sci-fi\">Science Fiction</option>\n        <option value=\"thriller\">Thriller</option>\n        <option value=\"western\">Western</option>\n        </Form.Control>\n        </Form.Group>\n        <br/>\n        <Form.Group>\n          <Form.Label>VHS Catalog Number:</Form.Label>\n          <Form.Control className=\"form-label\"\n                        size=\"sm\"\n                        type=\"string\" \n                        name=\"vhsId\"\n                        placeholder=\"Enter Catalog Number\"\n                        value={values.vhsId}\n                        isInvalid={errors.vhsId}\n                        onChange={handleChange} />\n        </Form.Group>\n        <br/>\n        <Form.Group>\n          <Form.Label>Clamshell Case?</Form.Label>\n          <Form.Control as=\"select\"\n                        size=\"sm\"\n                        className=\"form-label\"\n                        type=\"string\"\n                        name=\"clamShell\"\n                        value={values.clamShell}\n                        isInvalid={errors.clamShell}\n                        onChange={handleChange}\n                        >\n          <option>Choose Yes or No</option>  \n          <option value=\"No\">No</option> \n          <option value=\"Yes\">Yes</option>\n          </Form.Control>\n        </Form.Group>\n      <br/>\n      <div className=\"d-flex justify-content-around\">\n        <Button variant=\"primary\" type=\"submit\" size=\"md\">\n           Submit\n        </Button>\n        <Button variant=\"dark\" type=\"reset\" size=\"md\" onClick={clear}>\n          Clear\n        </Button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from 'react-bootstrap';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport {useDispatch} from 'react-redux';\nimport {deletePost} from '../../actions/posts';\n\n// Component for how each individual post will display:\nconst Post = ({post, setCurrentId}) => {\n    const dispatch = useDispatch();\n\n    //Pulls id from database for updating posts button:\n    const editEntry = () => {\n        setCurrentId(post._id)\n    }\n    // For button to delete a post:\n    const deleteEntry = () => {\n        dispatch(deletePost(post._id))\n    }\n\n\n    return(\n    <Container>\n        <div className = \"container\">\n        <div className=\"row\">\n        <div className=\"col-sm-10 d-flex flex-row align-items-center\">\n        <p>{post.title}({post.movieYear})</p>\n        </div>\n        <div className=\"col-sm-2 d-flex align-items-center\">\n      <DropdownButton size=\"sm\" variant=\"outline-secondary\" id=\"dropdown-basic-button\" title=\"\" className=\"post-button\">\n        <Dropdown.Item size=\"sm\" >Movie Release Year:{post.movieYear}</Dropdown.Item>\n        <Dropdown.Item size=\"sm\" >VHS Release:{post.vhsYear}</Dropdown.Item> \n        <Dropdown.Item size=\"sm\" >VHS Company:{post.vhsCompany}</Dropdown.Item>\n        <Dropdown.Item size=\"sm\" >Genre:{post.genre}</Dropdown.Item>\n        <Dropdown.Item size=\"sm\" >VHS ID Code:{post.vhsId}</Dropdown.Item>\n        <Dropdown.Item size=\"sm\" >Clamshell Case?:{post.clamShell}</Dropdown.Item> \n        <Dropdown.Item size=\"sm\" href=\"#form\" onClick={editEntry}>Edit</Dropdown.Item>\n        <Dropdown.Item size=\"sm\" href=\"#form\" onClick={deleteEntry}>Delete</Dropdown.Item>\n        </DropdownButton>\n        </div>\n        </div>\n  </div> \n     \n      \n     </Container>\n    )\n\n    }\nexport default Post;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from 'react-bootstrap';\nimport { CircularProgress } from '@material-ui/core';\nimport {useSelector} from 'react-redux';\nimport Post from './Post/Post';\n\n// map of all current posts to render in 'entries' section:\nconst Posts = ({setCurrentId}) => {\n    const posts = useSelector((state) => state.posts)\n\n    \n    return(\n        !posts.length ? <CircularProgress /> : (\n            <div>\n            <h2 style={{textAlign: \"center\"}}>Entries</h2>\n        <Container className=\"post-box\">\n            {posts.map((post) => (\n                <div key={post._id}>\n                    <Post post={post} setCurrentId={setCurrentId}/>\n                    <hr/>\n                </div>\n            ))}\n            \n        </Container>\n        </div>\n        )\n    )\n}\nexport default Posts;","import React, {useState, useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from 'react-bootstrap';\nimport {useDispatch} from 'react-redux';\nimport {getPosts} from './actions/posts.js';\nimport Navigation from './Navbar/Navigation.js';\nimport VHSForm from './Form/VHSForm.js';\nimport Posts from './Posts/VHSPosts.js';\nimport './index.css';\n\nconst App = () => {\n  //state of current id set to 0 unless entry is updated\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts())\n  }, [currentId, dispatch])\n\nreturn(\n <div>\n   <Container id=\"form\" className=\"form-container\">\n   <Navigation/>\n   <VHSForm currentId={currentId} setCurrentId={setCurrentId}/>\n   </Container>\n   <Container id=\"entries\" className=\"post-container\">\n   <Posts setCurrentId={setCurrentId}/>\n   </Container>\n    \n </div>\n);\n}\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport App from './App';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  \n  document.getElementById('root'),\n);"],"sourceRoot":""}