{"ast":null,"code":"import _toConsumableArray from\"/Users/nickdrafke/projects/vhs-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL,CREATE,UPDATE,DELETE}from'../constants/actions';// switch cases for all CRUD API calls:\nexport default(function(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case DELETE:return posts.filter(function(post){return post._id!==action.payload;});case UPDATE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case FETCH_ALL:return action.payload;case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);default:return posts;}});","map":{"version":3,"sources":["/Users/nickdrafke/projects/vhs-api/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","posts","action","type","filter","post","_id","payload","map"],"mappings":"wKAAA,OAAQA,SAAR,CAAmBC,MAAnB,CAA2BC,MAA3B,CAAmCC,MAAnC,KAAgD,sBAAhD,CAEA;AACA,eAAe,UAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACnC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKH,CAAAA,MAAL,CAAa,MAAOC,CAAAA,KAAK,CAACG,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,MAAM,CAACK,OAA9B,EAAb,CAAP,CACb,IAAKR,CAAAA,MAAL,CAAa,MAAOE,CAAAA,KAAK,CAACO,GAAN,CAAU,SAACH,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,CAAkCJ,MAAM,CAACK,OAAzC,CAAmDF,IAA7D,EAAV,CAAP,CACb,IAAKR,CAAAA,SAAL,CAAgB,MAAOK,CAAAA,MAAM,CAACK,OAAd,CAChB,IAAKT,CAAAA,MAAL,CAAa,mCAAWG,KAAX,GAAkBC,MAAM,CAACK,OAAzB,GACb,QAAS,MAAON,CAAAA,KAAP,CALb,CAOH,CARD","sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actions';\n\n// switch cases for all CRUD API calls:\nexport default (posts = [], action) => {\n    switch(action.type) {\n        case DELETE: return posts.filter((post) => post._id !== action.payload);\n        case UPDATE: return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case FETCH_ALL: return action.payload;\n        case CREATE: return [...posts, action.payload];\n        default: return posts;\n    }\n}"]},"metadata":{},"sourceType":"module"}